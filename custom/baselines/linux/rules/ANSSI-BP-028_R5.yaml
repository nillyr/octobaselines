# @copyright Copyright (c) 2021 Nicolas GRELLETY
# @license https://opensource.org/licenses/GPL-3.0 GNU GPLv3
# @link https://gitlab.internal.lan/octo-project/octobaselines
# @link https://github.com/nillyr/octobaselines
# @since 1.0.0b

id: ANSSI-BP-028_R5
title: Chargeur de démarrage
description: |
  Le chargeur de démarrage communément appelé _bootloader_ est un élément important de la chaîne de démarrage. Ceux d'aujourd'hui (GNU GRUB 2, systemd-boot, etc.) sont fonctionnellement riches : ils permettent d'accéder aux systèmes de fichiers, de modifier éventuellement les données, de démarrer sur des périphériques externes ou de changer les options de démarrage du noyau sélectionné.

  Un chargeur de démarrage permettant de protéger son démarrage par mot de passe est à privilégier. Ce mot de passe doit empêcher un utilisateur quelconque de modifier ses options de configuration.

  Quand le chargeur de démarrage n'offre pas la possibilité de lui adjoindre un mot de passe, une autre mesure technique ou organisationnelle doit être mise en place afin de bloquer toutes tentatives de modification des options de configuration par un utilisateur non-autorisé.

  [NOTE]
  Ce second cas n'est pas couvert dans le cadre de cet audit.

collection_cmd: |
  is_package_installed sudo && SUDO_CMD="sudo"

  # LILO
  if command -v lilo &>/dev/null; then
    ${SUDO_CMD} cat /etc/lilo.conf 2>/dev/null > ANSSI-BP-028_R5_lilo.txt
  fi

  # GRUB
  if command -v grub-install &>/dev/null; then
    grub-install --version 2>/dev/null > ANSSI-BP-028_R5_grub_version.txt

    # GRUB Legacy
    if [ -f /boot/grub/menu.lst ] || [ -f /etc/grub.conf ] ; then
      ${SUDO_CMD} cat /boot/grub/menu.lst 2>/dev/null > ANSSI-BP-028_R5_grub_legacy_menu.txt
      ${SUDO_CMD} cat /etc/grub.conf 2>/dev/null > ANSSI-BP-028_R5_grub_legacy_grub.txt
    fi

    # GRUB 2
    ${SUDO_CMD} cat /etc/grub2.cfg 2>/dev/null > ANSSI-BP-028_R5_grub_grub.txt
    ${SUDO_CMD} cat /etc/default/grub 2>/dev/null > ANSSI-BP-028_R5_grub_user_customizations.txt
    ${SUDO_CMD} find /etc/grub.d/ -type f -exec ls -lZ {} -exec cat {} \; 2>/dev/null > ANSSI-BP-028_R5_grub_menu_scripts.txt
    ${SUDO_CMD} find /boot/{grub,grub2,efi}/ -type f \( -name '*.lst' -o -name '*.cfg' -o -name '*.conf' \) -exec ls -lZ {} -exec cat {} \; 2>/dev/null > ANSSI-BP-028_R5_grub_cfg_files.txt
  fi

  # systemd-boot
  if [ -d /boot/efi/loader/ ]; then
    ${SUDO_CMD} find /boot/efi/loader/ -type f -name '*.conf' -exec ls -lZ {} -exec cat {} \; 2>/dev/null > ANSSI-BP-028_R5_systemd-boot.txt
    ${SUDO_CMD} cat /etc/sysconfig/bootloader 2>/dev/null > ANSSI-BP-028_R5_grub_basic_settings.txt
  fi

  # Kernel commandline
  ${SUDO_CMD} cat /proc/cmdline 2>/dev/null > ANSSI-BP-028_R5_grub_cmdline.txt
  ${SUDO_CMD} cat /etc/kernel/cmdline 2>/dev/null > ANSSI-BP-028_R5_systemd-boot_cmdline.txt

check: |
  ################################################################################
  LANG=en_US.utf8

  RULE_ID="ANSSI-BP-028_R5"
  HOSTNAME="$(hostname -f)"
  DATE="$(date +"%Y/%m/%d")"

  STATUS=RESULT_CHECK_FAIL

  is_package_installed sudo && SUDO_CMD="sudo"
  ${SUDO_CMD} grep -q -E "^\s*password=|^\s*password\s*(--md5)?|^\s*password_pbkdf2\s*|^\s*GRUB2_PASSWORD=|^\s*password\s*" /etc/lilo.conf /boot/grub/menu.lst /boot/{grub,grub2}/grub.cfg /boot/grub2/user.cfg /boot/efi/loader/loader.conf 2>/dev/null && STATUS=RESULT_CHECK_PASS

  if [ -z "${DISTRIBUTION}" ]; then
    identify_distribution
  fi

  case ${DISTRIBUTION} in
    ubuntu)
      # If the submenu is disabled, all boot options will be shown by default
      # Anyone can boot in recovery mode without entering a password
      # -> The recovery mode must be disabled

      if [ "$(${SUDO_CMD} grep -q -E "^\s*GRUB_DISABLE_SUBMENU=\"?(y|true)\"?" /etc/default/grub; echo $?)" -eq 0 ]; then
        debug "The Ubuntu submenu is disabled."
        if [ "$(${SUDO_CMD} grep -q -E "^\s*GRUB_DISABLE_RECOVERY=\"?(y|true)\"?" /etc/default/grub; echo $?)" -eq 1 ]; then
          debug "The Ubuntu recovery mode is not disabled."
          STATUS=RESULT_CHECK_FAIL
        fi
      fi
      ;;
    *)
      ;;
  esac

  printf "RULE_ID: %s\nHOSTNAME: %s\nDATE: %s\n\n%s\n" "${RULE_ID}" "${HOSTNAME}" "${DATE}" "${STATUS}" | encrypt_output
verification_type: CHECK_REGEX
expected: ^\s*(RESULT_CHECK_PASS|RESULT_CHECK_NA)
recommendation: |
  Nous recommandons de protéger l'accès au chargeur de démarrage par un mot de passe.

  Pour les distributions Red Hat / CentOS / AlmaLinux, la commande suivante peut être utilisée :

  [source%linenums,console]
  [options="nowrap"]
  ----
  sudo grub2-setpassword
  ----

  Le condensat du mot de passe sera automatiquement placé dans le fichier "/boot/grub2/user.cfg". Lors d'un futur démarrage, le mot de passe sera demandé pour l'édition des paramètres.

  Pour les distributions Debian / Ubuntu / Suse, plusieurs étapes sont nécessaires.

  Dans un premier temps, le mot de passe doit être défini avec la commande suivante :

  [source%linenums,bash]
  [options="nowrap"]
  ----
  sudo grub-mkpasswd-pbkdf2 --iteration-count=65536
  ----

  Ensuite, il faut modifier le fichier "/etc/grub.d/40_custom" afin d'y ajouter la sortie de la commande précédente. Le fichier doit alors être de la forme suivante :

  [source%linenums,bash]
  [options="nowrap"]
  ----
  #!/bin/sh
  exec tail -n +3 $0
  # This file provides an easy way to add custom menu entries. Simply type the
  # menu entries you want to add after this comment.  Be careful not to change
  # the 'exec tail' line above.

  set superusers="root"

  password_pbkdf2 root grub.pbkdf2.sha512.65536.3052FA[...]
  ----

  Enfin, il est nécessaire de mettre à jour la configuration du GRUB.

  [source%linenums,bash]
  [options="nowrap"]
  ----
  sudo update-grub
  ----

  Cette configuration nécessitera la sasie du mot de passe même pour un redémarrage standard. Afin de demander le mot de passe uniquement lors de la modification des paramètres, il est nécessaire de modifier le fichier "/etc/grub.d/10_linux" afin d'ajouter l'option "--unrestricted" pour les différents _menuentry_.

  Le fichier "/etc/grub.d/10_linux" doit alors être de la forme suivante :

  [source%linenums,bash]
  [options="nowrap"]
  ----
  #CLASS="--class gnu-linux --class gnu --class os"
  CLASS="--class gnu-linux --class gnu --class os --unrestricted"
  ----

  Enfin, il est nécessaire de mettre à jour la configuration du GRUB.

  [source%linenums,bash]
  [options="nowrap"]
  ----
  sudo update-grub
  ----

  [NOTE]
  Pour Ubuntu, même si l'option "--unrestricted" est utilisée, l'accès aux options avancées nécessitera la saisie du mot de passe.

  [NOTE]
  Cette configuration peut également être automatisée en utilisant les fichiers "preseed". Pour cela, il est nécessaire de configurer les paramètres "d-i grub-installer/password*".

  Dans le cas de l'utilisation de "systemd-boot", nous recommandons de suivre le _README_ du projet [systemd-boot-password](https://github.com/kitsunyan/systemd-boot-password).

  Voir aussi :

  - https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/assembly_protecting-grub-with-a-password_managing-monitoring-and-updating-the-kernel
  - https://documentation.suse.com/sles/15-SP1/html/SLES-all/cha-grub2.html
  - https://github.com/kitsunyan/systemd-boot-password
  - https://help.ubuntu.com/community/Installation/UnattendedCD
  - https://ubuntu.com/server/docs/install/autoinstall
  - https://wiki.debian.org/DebianInstaller/Preseed

level: intermediary
severity: high
references:
  - https://www.ssi.gouv.fr/guide/recommandations-de-securite-relatives-a-un-systeme-gnulinux/
