id: NT_OpenSSH_R21
title: Imputabilité des accès
description: |
  La possession d'un compte dédié pour chaque utilisateur permet une gestion plus fine des accès et une meilleure traçabilité. Un utilisateur ayant connaissance que son compte lui est dédié peut être plus vigilant sur son usage.

  Le compte local "root" est un exemple de compte générique que l’on retrouve sur tous les systèmes Unix/Linux, et utilisé comme compte d'administration. Ce compte ne doit pas être accessible directement à un utilisateur.

collection_cmd: |
  if is_package_installed openssh-server; then
    is_package_installed sudo && SUDO_CMD="sudo"
    IFS=" " read -r -a config_files <<< "$(get_all_sshd_config_files)"
    for file in "${config_files[@]}"; do
      printf "File: %s\n%s\n\n" "$(${SUDO_CMD} ls -lZ "${file}")" "$(${SUDO_CMD} cat "${file}" 2>/dev/null)" >> NT_OpenSSH_R21_config_files.txt
      printf "File: %s\n%s\n\n" "$(${SUDO_CMD} ls -lZ "${file}")" "$(${SUDO_CMD} sshd -T -f "${file}" 2>/dev/null)" >> NT_OpenSSH_R21_running_configs.txt
    done
  else
    : > NT_OpenSSH_R21.txt
  fi

check: |
  ################################################################################
  LANG=en_US.utf8

  RULE_ID="NT_OpenSSH_R21"
  HOSTNAME="$(hostname -f)"
  DATE="$(date +"%Y/%m/%d")"

  STATUS=RESULT_CHECK_PASS

  if is_package_installed openssh-server; then
    is_package_installed sudo && SUDO_CMD="sudo"
    IFS=" " read -r -a config_files <<< "$(get_all_sshd_config_files)"
    for file in "${config_files[@]}"; do
      if { ! ${SUDO_CMD} sshd -T -f "${file}" | grep -E "^\s*permitrootlogin\s+no$" ; } &>/dev/null; then
        STATUS=RESULT_CHECK_FAIL
      fi
    done

  else
    STATUS=RESULT_CHECK_NA
  fi

  printf "RULE_ID: %s\nHOSTNAME: %s\nDATE: %s\n\n%s\n" "${RULE_ID}" "${HOSTNAME}" "${DATE}" "${STATUS}" | encrypt_output
verification_type: CHECK_REGEX
expected: ^\s*(RESULT_CHECK_PASS|RESULT_CHECK_NA)
recommendation: |
  Afin d'assurer l'imputabilité des actions, nous recommandons de bloquer l'authentifcation des utilisateurs via le compte générique "root".

  Pour cela, le _playbook_ Ansible suivant peut être utilisé :
  [source%linenums,yaml]
  [options="nowrap"]
  ----
  - name: Disable SSH Root Login
    hosts: all
    become: true

    ansible.builtin.lineinfile:
      path: "{{ item }}"
      regexp: "^\s*PermitRootLogin"
      line: "PermitRootLogin no"
    with_items:
      - /etc/ssh/sshd_config
    notify:
      - Restart SSH service

    handlers:
      - name Restart SSH service
        become: true
        ansible.builtin.service:
          name: ssh
          state: restarted
  ----

  Voir aussi :

  - https://www.man7.org/linux/man-pages/man5/sshd_config.5.html
  - https://docs.ansible.com/ansible/latest/collections/ansible/builtin/lineinfile_module.html

level: minimal
severity: medium
references:
  - https://www.ssi.gouv.fr/guide/recommandations-de-securite-relatives-a-un-systeme-gnulinux/
  - https://www.ssi.gouv.fr/guide/recommandations-pour-un-usage-securise-dopenssh/
