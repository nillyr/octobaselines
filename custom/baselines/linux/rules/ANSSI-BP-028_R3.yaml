id: ANSSI-BP-028_R3
title: Démarrage sécurisé UEFI
description: |
  Le démarrage sécurisé UEFI (ou Secure Boot UEFI) est un mécanisme de vérification du code chargé par l'UEFI. Il est conçu pour empêcher l'exécution de code non signé par la machine. Les codes chargés par l'UEFI peuvent être :

  - des chargeurs de démarrage,
  - des binaires de mises à jour du micrologiciel UEFI ou
  - une image d'un noyau Linux au format EFI en utilisant l'EFI Boot Stub 1.

  Le fonctionnement du démarrage sécurisé UEFI repose sur un mécanisme de signatures et d'empreintes : un code dont la signature ou l'empreinte n'est pas reconnue par l'UEFI ou une des entités de vérification de signature de la chaîne de démarrage ne peut pas être chargé.

  Il est recommandé d'activer la configuration du démarrage sécurisé UEFI associée à la distribution.

collection_cmd: |
  if [ -d /sys/firmware/efi ]; then
    echo "UEFI" > ANSSI-BP-028_R3_boot_mode.txt
    if is_package_installed mokutil; then
      mokutil --sb-state > ANSSI-BP-028_R3_secure_boot.txt 2>&1
    else
      if command -v bootctl &>/dev/null; then
        is_package_installed sudo && SUDO_CMD=sudo
        ${SUDO_CMD} bootctl status --no-pager 2>/dev/null > ANSSI-BP-028_R3_bootctl.txt
      fi
      od --address-radix=n --format=u1 /sys/firmware/efi/efivars/SecureBoot-* > ANSSI-BP-028_R3_secure_boot.txt
    fi
  else
    echo "BIOS" > ANSSI-BP-028_R3_boot_mode.txt
  fi

check: |
  ################################################################################
  LANG=en_US.utf8

  RULE_ID="ANSSI-BP-028_R3"
  HOSTNAME="$(hostname -f)"
  DATE="$(date +"%Y/%m/%d")"

  STATUS=RESULT_CHECK_FAIL

  if [ -d /sys/firmware/efi ]; then
    debug "Running in 'UEFI' mode"
    if is_package_installed mokutil; then
      mokutil --sb-state 2>&1 | grep -q "SecureBoot enabled" && STATUS=RESULT_CHECK_PASS
    else
      if command -v bootctl &>/dev/null; then
        is_package_installed sudo && SUDO_CMD=sudo
        ${SUDO_CMD} bootctl status --no-pager 2>/dev/null | grep -i "secure boot" | awk -F ":" '{print $2}' | grep -q -E "^\s*enabled" && STATUS=RESULT_CHECK_PASS
      fi
      sb_status=$(od --address-radix=n --format=u1 /sys/firmware/efi/efivars/SecureBoot-* | awk '{print $5}')
      if [ "${sb_status}" -eq 1 ]; then
        STATUS=RESULT_CHECK_PASS
      fi
    fi
  else
    debug "Running in 'BIOS' mode"
    STATUS=RESULT_CHECK_NA
  fi

  printf "RULE_ID: %s\nHOSTNAME: %s\nDATE: %s\n\n%s\n" "${RULE_ID}" "${HOSTNAME}" "${DATE}" "${STATUS}" | encrypt_output
verification_type: CHECK_REGEX
expected: ^\s*(RESULT_CHECK_PASS|RESULT_CHECK_NA)
recommendation: |
  Nous recommandons d'activer la configuration du démarrage sécurisé UEFI associée à la distribution.

  Dans le cas d'une machine physique, il est nécessaire d'accéder à l'utilitaire de configuration de l'UEFI afin de configurer l'UEFI de la carte mère. Dans le cas d'une machine virtuelle, la configuration du template doit être modifiée afin d'utiliser "UEFI" et d'activer le SecureBoot. De plus, pour se conformer au niveau "Élevé", il est recommandé de remplacer les clés préchargés dans l'UEFI.

  FIXME template proxmox + configuration + software tpm pour les clés ?

  Voir aussi :

  - https://registry.terraform.io/providers/Telmate/proxmox/latest/docs/resources/vm_qemu

level: intermediary
severity: low
references:
  - https://www.ssi.gouv.fr/guide/recommandations-de-securite-relatives-a-un-systeme-gnulinux/
  - https://wiki.debian.org/SecureBoot
  - https://wiki.ubuntu.com/UEFI/SecureBoot
  - https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot
  - https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#Using_your_own_keys
